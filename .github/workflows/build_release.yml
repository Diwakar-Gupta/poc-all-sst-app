name: Manual workflow

on:
  workflow_dispatch:
    inputs:
      APP_VERSION:
        description: 'Version Number'
        required: true
      
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js environment
        uses: actions/setup-node@v2
        with:
          node-version: '20'

      - name: Install Java 17
        uses: actions/setup-java@v2
        with:
          distribution: 'adopt'
          java-version: '17'

      - name: Install dependencies
        run: |
          yarn install

      - name: Inject secret values
        run: |
          echo "" >> .env
          echo "APP_VERSION=${{ github.event.inputs.APP_VERSION }}" >> .env
          
          sed -i.bak "s/{Your Deployment Key}/${{ secrets.CODE_PUSH_DEPLOYMENT_KEY }}/" "./android/app/src/main/res/values/strings.xml"
          sed -i.bak "s/{Your app secret here}/${{ secrets.CODE_PUSH_APP_SECRET }}/" "./android/app/src/main/assets/appcenter-config.json"

      - name: Build Android release
        run: |
          cd android
          ./gradlew assembleRelease

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.APP_VERSION }}
          release_name: ${{ github.event.inputs.APP_VERSION }}
          draft: false
          prerelease: false
          
      - name: Upload Release to GitHub
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} 
          asset_path: android/app/build/outputs/apk/release/app-release.apk
          asset_name: app-release.apk
          asset_content_type: application/apk

      
